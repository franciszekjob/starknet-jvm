name: Checks
on: push

jobs:
  build_virt:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - virt_platform: arm64
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Set up qemu
        uses: docker/setup-qemu-action@v2
        with:
          platforms: ${{ matrix.virt_platform }}
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver: docker
      - name: Build platform specific lib
        uses: docker/build-push-action@v3
        with:
          context: .
          file: .github/workflows/Dockerfile.multiarch
          platforms: linux/${{ matrix.virt_platform }}
          push: false
          tags: build:latest
      - name: Set arch variable
        id: vars
        run: echo "::set-output name=os_arch::$(docker run --platform linux/${{ matrix.virt_platform }} -t build bash -c 'uname -m')"
      - name: Extract lib
        run: docker cp $(docker create build):/build/crypto/build/bindings/libcrypto_jni.so libcrypto_jni.so
      - name: Upload the shared lib
        uses: actions/upload-artifact@v2
        with:
          name: lib-Linux-${{ steps.vars.outputs.os_arch }}
          path: libcrypto_jni.so
    outputs:
      archs: ${{ steps.vars.outputs.os_arch }}