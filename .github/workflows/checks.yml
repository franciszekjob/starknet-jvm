name: Checks
on: push

jobs:
  build_x64:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup cmake
        uses: jwlawson/actions-setup-cmake@v1.12
        with:
          cmake-version: '3.16.x'
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'corretto'
          cache: 'gradle'
      - name: Set up GCC 7
        uses: egor-tensin/setup-gcc@v1
        with:
          version: 7
          platform: x64
        if: matrix.os == 'ubuntu-latest'
      - name: Force usage of gcc 7
        run: |
          # First delete any version other than 7
          #sudo mv /usr/lib/gcc/x86_64-linux-gnu/7 /tmp/gcc7
          #sudo rm -r /usr/lib/gcc/x86_64-linux-gnu/* 
          #sudo mv /tmp/gcc7 /usr/lib/gcc/x86_64-linux-gnu/7
          echo "CC=/usr/bin/gcc-7" >> $GITHUB_ENV
          echo "CXX=/usr/bin/g++-7" >> $GITHUB_ENV
        shell: bash
        if: matrix.os == 'ubuntu-latest'
      - name: Set arch variable
        id: vars
        run: echo "::set-output name=os_arch::$(uname -m)"

      - name: Build platform specific lib
        run: ./gradlew buildCryptoCpp
      - name: Upload the shared lib
        uses: actions/upload-artifact@v2
        with:
          name: lib-${{ runner.os }}-${{ steps.vars.outputs.os_arch }}
          path: crypto/build/bindings/libcrypto_jni.*
      - name: Build android's AAR
        run: ./gradlew android:build
        if: matrix.os == 'ubuntu-latest'
      - name: Rename AAR
        run: mv android/build/outputs/aar/android-release.aar starknet.aar
        if: matrix.os == 'ubuntu-latest'
      - name: Upload the AAR
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v2
        with:
          name: starknet-aar
          path: starknet.aar